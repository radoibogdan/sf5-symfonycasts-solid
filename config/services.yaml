# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Variante 1 : Inject list of ScoringFactorInterface objects into SightingScorer Class constructor
    # App\Service\SightingScorer:
    #     arguments:
    #         $scoringFactors:
    #             - '@App\Scoring\TitleFactor'
    #             - '@App\Scoring\DescriptionFactor'
    #             - '@App\Scoring\CoordinatesFactor'

    # Permet de contourner un message d'erreur
    # l'instanciation de DebuggableSightingScorer renvera SightingScorer
    App\Service\DebuggableSightingScorer: '@App\Service\SightingScorer'

    # Variante 2 : Inject list of ScoringFactorInterface objects into SightingScorer Class constructor
    # Override build method in Kernel
    # Inject all services that are tagged with scoring.factor
    App\Service\SightingScorer:
        # Whenever you use SightingScorer (ex: in a Controller) you will get a DebuggableSightingScorer class
        # Check with debug:container SightingScorer
        class: App\Service\DebuggableSightingScorer
        arguments:
            $scoringFactors: !tagged_iterator scoring.factor